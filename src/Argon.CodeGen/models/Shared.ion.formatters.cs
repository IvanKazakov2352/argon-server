//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;
[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_ArgonIonTicket_Formatter : IonFormatter<ArgonIonTicket>
{
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public ArgonIonTicket Read(CborReader reader)
    {
        var arraySize = reader.ReadStartArray() ?? throw new Exception("undefined len array not allowed");;
        var __userid = IonFormatterStorage<guid>.Read(reader);
        var __ip = IonFormatterStorage<string>.Read(reader);
        var __ray = IonFormatterStorage<string>.Read(reader);
        var __clientname = IonFormatterStorage<string>.Read(reader);
        var __hostname = IonFormatterStorage<string>.Read(reader);
        var __appid = IonFormatterStorage<string>.Read(reader);
        var __sessionid = IonFormatterStorage<guid>.Read(reader);
        var __machineid = IonFormatterStorage<string>.Read(reader);
        var __region = IonFormatterStorage<string>.Read(reader);
        reader.ReadEndArrayAndSkip(arraySize - 9);
        return new(__userid, __ip, __ray, __clientname, __hostname, __appid, __sessionid, __machineid, __region);
    }
    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public void Write(CborWriter writer, ArgonIonTicket value)
    {
        writer.WriteStartArray(9);
        IonFormatterStorage<guid>.Write(writer, value.userId);
        IonFormatterStorage<string>.Write(writer, value.ip);
        IonFormatterStorage<string>.Write(writer, value.ray);
        IonFormatterStorage<string>.Write(writer, value.clientName);
        IonFormatterStorage<string>.Write(writer, value.hostName);
        IonFormatterStorage<string>.Write(writer, value.appId);
        IonFormatterStorage<guid>.Write(writer, value.sessionId);
        IonFormatterStorage<string>.Write(writer, value.machineId);
        IonFormatterStorage<string>.Write(writer, value.region);
        writer.WriteEndArray();
    }
}

