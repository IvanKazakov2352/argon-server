//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a code generation tool.
//     Changes to this file may cause incorrect behavior and will be lost
//     if the code is regenerated.
//
//     Generator: IonPath Codegen
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable
#nullable enable


namespace ArgonContracts;

[GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
public sealed class Ion_UserInteraction_ClientImpl(IonClientContext context) : IUserInteraction
{
    
    private static readonly Lazy<MethodInfo> GetMe_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(GetMe), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> CreateSpace_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(CreateSpace), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetSpaces_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(GetSpaces), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> UpdateMe_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(UpdateMe), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> Authorize_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(Authorize), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> Registration_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(Registration), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BeginResetPassword_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(BeginResetPassword), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> ResetPassword_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(ResetPassword), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> JoinToSpace_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(JoinToSpace), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> BroadcastPresence_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(BroadcastPresence), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> RemoveBroadcastPresence_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(RemoveBroadcastPresence), BindingFlags.Public | BindingFlags.Instance)!);
    private static readonly Lazy<MethodInfo> GetMyFeatures_Ref = new(() =>
        typeof(IUserInteraction).GetMethod(nameof(GetMyFeatures), BindingFlags.Public | BindingFlags.Instance)!);


    
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonUser> GetMe()
    {
        var req = new IonRequest(context, typeof(IUserInteraction), GetMe_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonUser>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonSpaceBase> CreateSpace(CreateServerRequest __request)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), CreateSpace_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<CreateServerRequest>.Write(writer, __request);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonSpaceBase>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<ArgonSpaceBase>> GetSpaces()
    {
        var req = new IonRequest(context, typeof(IUserInteraction), GetSpaces_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IonArray<ArgonSpaceBase>>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<ArgonUser> UpdateMe(UserEditInput __request)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), UpdateMe_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<UserEditInput>.Write(writer, __request);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<ArgonUser>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IAuthorizeResult> Authorize(UserCredentialsInput __data)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), Authorize_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<UserCredentialsInput>.Write(writer, __data);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IAuthorizeResult>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IRegistrationResult> Registration(NewUserCredentialsInput __data)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), Registration_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<NewUserCredentialsInput>.Write(writer, __data);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IRegistrationResult>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<bool> BeginResetPassword(string __email)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), BeginResetPassword_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __email);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<bool>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IAuthorizeResult> ResetPassword(string __email, string __otpcode, string __newpassword)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), ResetPassword_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 3;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<string>.Write(writer, __email);
        IonFormatterStorage<string>.Write(writer, __otpcode);
        IonFormatterStorage<string>.Write(writer, __newpassword);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IAuthorizeResult>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IJoinToSpaceResult> JoinToSpace(InviteCode __invitecode)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), JoinToSpace_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 1;
    
        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<InviteCode>.Write(writer, __invitecode);
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IJoinToSpaceResult>(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task BroadcastPresence(UserActivityPresence __presence)
    {
        var req = new IonRequest(context, typeof(IUserInteraction), BroadcastPresence_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 1;

        writer.WriteStartArray(argsSize);
        
        IonFormatterStorage<UserActivityPresence>.Write(writer, __presence);
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task RemoveBroadcastPresence()
    {
        var req = new IonRequest(context, typeof(IUserInteraction), RemoveBroadcastPresence_Ref.Value);

        var writer = new CborWriter();
        
        const int argsSize = 0;

        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();

        await req.CallAsync(writer.Encode());
    }
    [GeneratedCodeAttribute("ionc", null), CompilerGeneratedAttribute]
    public async Task<IonArray<FeatureFlag>> GetMyFeatures()
    {
        var req = new IonRequest(context, typeof(IUserInteraction), GetMyFeatures_Ref.Value);
    
        var writer = new CborWriter();
        
        const int argsSize = 0;
    
        writer.WriteStartArray(argsSize);
        
        
        
        writer.WriteEndArray();
    
        return await req.CallAsync<IonArray<FeatureFlag>>(writer.Encode());
    }

}

