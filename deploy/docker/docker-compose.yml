networks:
  argon_network:
    driver: bridge

services:
  yugabyte:
    image: yugabytedb/yugabyte:latest
    container_name: argon-db
    command: ["bin/yugabyted", "start", "--daemon=false"] 
    volumes:
      - ./argon_db_data:/mnt
    networks:
      - argon_network

  keydb:
    image: eqalpha/keydb
    container_name: argon-cache
    command: ["keydb-server"]
    networks:
      - argon_network

  argon-server:
    image: argonchat/argon-server
    container_name: argon-server
    ports:
      - "5002:5002"
    environment:
      - USE_VAULT=true
      - ARGON_MODE=SingleInstance
      - ARGON_ROLE=Hybrid
      - ConnectionStrings__DefaultConnection=Host=yugabyte;Port=5433;Username=yugabyte;Database=apiDb
      - ARGON_VAULT_URL=http://vault:8200
      - VAULT_TOKEN_FILE=/vault/token
      - Cdn__Storage__Kind=GenericS3
      - Cdn__Storage__BaseUrl=http://seaweedfs:9321
      - Cdn__Storage__Login=argon
      - Cdn__Storage__Password=argon
    volumes:
      - ./vault_tokens:/vault:ro
    depends_on:
      yugabyte:
        condition: service_started
      keydb:
        condition: service_started
      vault_unseal:
        condition: service_healthy
      seaweedfs:
        condition: service_healthy
    networks:
      - argon_network
      

  vault:
    image: hashicorp/vault
    user: root
    container_name: argon-secrets
    ports:
      - "8200:8200"
    cap_add:
      - IPC_LOCK  
    environment:
      - VAULT_LOCAL_CONFIG={"storage":{"mysql":{"username":"vault","password":"password","address":"db:3306","database":"vault","tls_ca":"","tls_cert":"","tls_key":""}},"listener":[{"tcp":{"address":"0.0.0.0:8200","tls_disable":true}}],"ui":true}
      - SKIP_CHOWN=true
    command: server
    healthcheck:
      retries: 5
    networks:
      - argon_network
    depends_on:
      db:
        condition: service_healthy

  vault_unseal:
    image: hashicorp/vault
    container_name: argon-secrets-unsealer
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    volumes:
      - ./vault_tokens:/vault
      - ./entrypoint.sh:/entrypoint.sh
    environment:
      - VAULT_ADDR=http://vault:8200
    networks:
      - argon_network
    healthcheck:
      test: ["CMD-SHELL", "[ -f /vault/token ] && exit 0 || exit 1"]
      interval: 5s
      retries: 5
      timeout: 3s
    depends_on:
      - vault
      
  seaweedfs:
    image: chrislusf/seaweedfs
    container_name: argon-storage-s3
    command: "server -s3 -dir /data"
    ports:
      - "8333:8333"
      - "9321:9321"
    volumes:
      - argon_storage_data:/data
    environment:
      S3_ACCESS_KEY: argon
      S3_SECRET_KEY: argon
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9321/"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s

  db:
    image: mysql
    container_name: argon-secrets-db
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=vault
      - MYSQL_USER=vault
      - MYSQL_PASSWORD=password
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - argon_network
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h localhost -u vault -ppassword"]
      interval: 5s
      timeout: 3s
      retries: 5

volumes:
  mysql_data:
  argon_storage_data: